/data/{dbname}/{path}:
  get:
    tags:
      - data
    summary: Get the value of a path
    description: Gets the stored value of a path in the database
    parameters:
      - name: dbname
        in: path
        description: name of the database
        required: true
        schema:
          type: string
          example: mydb
      - name: path
        in: path
        description: database path
        required: true
        schema:
          type: string
          example: collection/child/property
      - name: include
        in: query
        description: comma-separated list of child properties to include 
        required: false
        schema:
          type: string
      - name: exclude
        in: query
        description: comma-separated list of child properties to exclude
        required: false
        schema:
          type: string
      - name: child_objects
        in: query
        description: whether to include child objects
        required: false
        schema:
          type: boolean
    responses:
      200:
        description: Returns the serialized value of the target path, and whether it exists in the database
        content:
          'application/json':
            schema:
              required:
              - val
              - exists
              allOf:
              - type: object
                properties:
                  exists:
                    type: boolean
                    description: indicates if the path exists (when `false`, `val` property will be `null`)
                    example: true
              - $ref: '#/components/schemas/SerializedValue'
              example:
                exists: true
                val: { name: 'My todo list', stats: { size: 216, created: '2022-04-07T15:11:42Z', modified: '2022-03-08T12:24:05Z' } }
                map: { 'stats/created': 'date', 'stats/modified': 'date' } 
      403:
        description: Returns a "403 Forbidden" if the signed in user is not allowed to read from the target path
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Error'
      500:
        description: An unexpected error occurred
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UnexpectedError'
